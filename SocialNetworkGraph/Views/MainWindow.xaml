<Window x:Class="SocialNetworkGraph.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:zoom="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions" 
        xmlns:converters="clr-namespace:SocialNetworkGraph.Converters"
        xmlns:graphsharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
        mc:Ignorable="d"
        x:Name="root"
        Title="Social Network Graph" 
        MinHeight="600" MinWidth="800"
        Height="600" Width="800" ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <converters:EdgeRouteToPathConverter x:Key="routeToPathConverter" />
        <converters:BooleanToVisibleConverter x:Key="boolToVis"/>
        
        <DataTemplate x:Key="toolTipTemplate">
            <TextBlock Text="{Binding Name}"/>
        </DataTemplate>
        
        <Style TargetType="{x:Type graphsharp:VertexControl}">
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5" />
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#F5F5F5"/>
            <Setter Property="FontWeight" Value="Bold"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graphsharp:VertexControl}">
                        <Grid
                          MinWidth="20"
                          MinHeight="20">
                            <Grid.ToolTip>
                                <ContentPresenter Content="{TemplateBinding Vertex}" ContentTemplate="{StaticResource toolTipTemplate}"/>
                            </Grid.ToolTip>
                            <Grid.InputBindings>
                                <MouseBinding Gesture="LeftClick" 
                                              CommandParameter="{Binding Vertex, RelativeSource={RelativeSource AncestorType={x:Type  graphsharp:VertexControl}}}"
                                              Command="{Binding ElementName=root, Path=DataContext.VertexClickCommand}"/>
                            </Grid.InputBindings>
                            <Border Background="#448AFF" BorderThickness="0" CornerRadius="2">
                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0">
                                    <ContentPresenter Name="conpres" Content="{TemplateBinding Vertex}"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Panel.ZIndex" Value="2"/>
        </Style>

        <Style TargetType="{x:Type graphsharp:EdgeControl}">
            <Setter Property="Foreground" Value="#999999"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graphsharp:EdgeControl}">
                        <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="{TemplateBinding StrokeThickness}"
                          MinWidth="1"
                          MinHeight="1"
                          x:Name="edgePath">
                            <Path.Data>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <!--https://stackoverflow.com/questions/14975574/how-to-multibinding-too-geometrygroup-->
                                        <MultiBinding Converter="{StaticResource routeToPathConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(graphsharp:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(graphsharp:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(graphsharp:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(graphsharp:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="RoutePoints" />
                                        </MultiBinding>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="graphsharp:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                    <Setter Property="Foreground" Value="#448AFF"/>
                    <Setter Property="Panel.ZIndex" Value="2"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="graphsharp:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True">
                    <Setter Property="Foreground" Value="#448AFF"/>
                    <Setter Property="Panel.ZIndex" Value="2"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Black" Direction="320" ShadowDepth="2" BlurRadius="4" Opacity="0.5" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Grid.ZIndex="2" 
                   Visibility="{Binding ElementName=root, Path=DataContext.Loaded, Converter={StaticResource boolToVis}, TargetNullValue=Visible}"
                   Background="White">
            <Image x:Name="image" Source="/Media/arrows.png" 
                    MaxWidth="250" MaxHeight="250" RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                    <RotateTransform x:Name="TransRotate" CenterX="0" CenterY="0" Angle="0" />
                </Image.RenderTransform>
                <Image.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation x:Name="da" 
                                        Storyboard.TargetName="TransRotate" 
                                        Storyboard.TargetProperty="Angle"
                                        From="0"
                                        To="360"
                                        Duration="0:0:3"  
                                        AutoReverse="False" 
                                        RepeatBehavior="Forever" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Image.Triggers>
            </Image>
        </DockPanel>
        <zoom:ZoomControl  Grid.Row="0" Grid.ZIndex="1"  Zoom="1" 
            ZoomBoxOpacity="0.5" Background="LightGray">
            <graphsharp:GraphLayout 
                    x:Name="graphLayout" Margin="10"
                    Graph="{Binding ElementName=root, Path=DataContext.Graph}"
                    LayoutAlgorithmType="LinLog" 
                    OverlapRemovalAlgorithmType="FSA"
                    HighlightAlgorithmType="Simple" />
        </zoom:ZoomControl>
        <StatusBar Name="sbar" Grid.Row="1" Grid.ColumnSpan="2" 
           VerticalAlignment="Bottom" Background="White" >
            <StatusBarItem>
                <TextBlock Text="{Binding ElementName=root, Path=DataContext.ErrorMessage}" Foreground="Red"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
