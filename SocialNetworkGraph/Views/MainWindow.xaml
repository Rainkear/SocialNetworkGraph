<Window x:Class="SocialNetworkGraph.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:zoom="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions" 
        xmlns:local="clr-namespace:SocialNetworkGraph"
        xmlns:graphsharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
        mc:Ignorable="d"
        x:Name="root"
        Title="Social Network Graph" 
        MinHeight="600" MinWidth="800"
        Height="600" Width="800">
    <zoom:ZoomControl  Grid.Row="1"  Zoom="1" 
            ZoomBoxOpacity="0.5" Background="#ff656565">
        <graphsharp:GraphLayout 
                x:Name="graphLayout" Margin="10"
                Graph="{Binding ElementName=root, Path=DataContext.Graph}"
                LayoutAlgorithmType="LinLog" 
                OverlapRemovalAlgorithmType="FSA"
                HighlightAlgorithmType="Simple" />
    </zoom:ZoomControl>
    <Window.Resources>
        <Style TargetType="{x:Type graphsharp:VertexControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graphsharp:VertexControl}">
                        <Grid
                          MinWidth="20"
                          MinHeight="20">
                            <Grid.InputBindings>
                                <MouseBinding Gesture="LeftClick" 
                                              CommandParameter="{Binding Vertex, RelativeSource={RelativeSource AncestorType={x:Type  graphsharp:VertexControl}}}"
                                              Command="{Binding ElementName=root, Path=DataContext.VertexClickCommand}"/>
                            </Grid.InputBindings>
                            <Border Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="1" CornerRadius="3">
                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <ContentPresenter Name="conpres" Content="{TemplateBinding Vertex}"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Panel.ZIndex" Value="2"/>
        </Style>

        <local:EdgeRouteToPathConverter x:Key="routeToPathConverter" />

        <Style TargetType="{x:Type graphsharp:EdgeControl}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graphsharp:EdgeControl}">
                        <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="{TemplateBinding StrokeThickness}"
                          MinWidth="1"
                          MinHeight="1"
                          x:Name="edgePath">
                            <Path.Data>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <!--https://stackoverflow.com/questions/14975574/how-to-multibinding-too-geometrygroup-->
                                        <MultiBinding Converter="{StaticResource routeToPathConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(graphsharp:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(graphsharp:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(graphsharp:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(graphsharp:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="RoutePoints" />
                                        </MultiBinding>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="graphsharp:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                    <Setter Property="Foreground" Value="Blue"/>
                </Trigger>
                <Trigger Property="graphsharp:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True">
                    <Setter Property="Foreground" Value="Blue"/>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
</Window>
